# -*- coding: utf-8 -*-
"""Amul_Butter_ocr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FZx4o10TcnqABZL7RleKT4P8o3gat54-

# Installations
"""

!pip install easyocr --no-deps

!pip install python-bidi

"""# Libraries and Data"""

import easyocr
import os
from datetime import datetime
# Create a reader object.
reader = easyocr.Reader(["en", "de", "fr"])

from google.colab import drive
drive.mount('/content/drive')

"""# Code"""

def make_statement(nums):
    unit = 'g'
    if nums[-1]<4:
        unit = 'kg'
    for i in range(len(nums)):
        s = str(nums[i])
        if len(s)>3 and '.' not in s:
            nums[i] = int(s[:3])
        if '.' in s:
            ind = s.index('.')
            nums[i] = float(s[:ind+2])
    if len(nums)==1:
        return f'{nums[0]} Pieces'
    if len(nums)==2:
        return f'{nums[0]} Pieces X {nums[1]}{unit}'
    if len(nums)==3:
        return f'{nums[0]} kg ({nums[1]} Pieces X {nums[2]}{unit})'
    return nums

def get_nums(statement):
    nums = []
    curr = ''
    for i in range(len(statement)):
        if statement[i].isdigit() or (len(curr)>0 and statement[i]=='.'):
            curr+=statement[i]
            if i<len(statement)-1 and statement[i+1]=='.': continue

            if i==len(statement)-1 or not statement[i+1].isdigit():
                if float(curr)==int(float(curr)): nums.append(int(curr))
                else: nums.append(float(curr))
                curr=''
    return nums


def get_target_statement(image):
    words = []
    for text in image:
        words.append(text[1])

    # Get the required/targetted sentence
    req = ''
    for sentence in words:
        if 'X' in sentence or 'x' in sentence or 'pieces' in sentence:
            nums = get_nums(sentence)
            if len(nums)>=2:
                req = sentence
    if len(req)>2:
        return(req)
    return None

my_path = "/content/drive/MyDrive/OCR-SKU/Amul_Butter_targetted/"
times = []
for f in sorted(os.listdir(my_path)):
    # Read the image file.
    image_path = my_path+f

    t1 = datetime.now()
    image = reader.readtext(image_path)

    req = get_target_statement(image)
    if req:
        nums = get_nums(req)
        print(make_statement(nums))
    else: print(f)
    t2 = datetime.now()
    times.append(t2-t1)

import numpy as np
times = np.array(times)
print('Average Time',np.mean(times))





import easyocr
from PIL import Image

# Read the image file.
image_path = my_path+'IMG-20230708-WA0117.jpg'
image = reader.readtext(image_path)
img = Image.open(image_path)
img

# Print the text that was extracted from the image file.
words = []
for text in image:
    print(text[1])
    words.append(text[1])

