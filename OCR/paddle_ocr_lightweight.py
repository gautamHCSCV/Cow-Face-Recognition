# -*- coding: utf-8 -*-
"""Paddle OCR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12lrrwhxNeya5Ui0cnJtjdbLpq-3yoEkA

# Paddle OCR
"""

!pip install paddlepaddle
!pip install paddleocr
!pip install paddlepaddle-gpu

import paddleocr
from paddleocr import PaddleOCR
from datetime import datetime
import os
import warnings
warnings.filterwarnings('ignore')

ocr = PaddleOCR(lang="en", rec_model_type='en', use_gpu=False)



from google.colab import drive
drive.mount('/content/drive')

def make_statement(nums,x=1):
    unit = 'g'
    for i in range(len(nums)):
        s = str(nums[i])
        if len(s)>3 and '.' not in s:
            nums[i] = int(s[:3])
        if '.' in s:
            ind = s.index('.')
            nums[i] = float(s[:ind+2])
    if nums[-1]<4:
        unit = 'kg'

    if len(nums)==1:
        return f'{nums[0]} Pieces'
    if len(nums)==2:
        return f'{nums[0]} Pieces X {nums[1]}{unit}'
    if len(nums)==3:
        if x==1:
            return f'{nums[0]} kg ({nums[1]} Pieces X {nums[2]}{unit})'
        else:
            return f'{nums[0]}Pieces X {nums[1]} Pieces X {nums[2]}{unit}'
    return nums

def get_nums(statement):
    nums = []
    curr = ''
    for i in range(len(statement)):
        if statement[i].isdigit() or (len(curr)>0 and statement[i]=='.'):
            curr+=statement[i]
            if i<len(statement)-1 and statement[i+1]=='.': continue

            if i==len(statement)-1 or not statement[i+1].isdigit():
                if float(curr)==int(float(curr)): nums.append(int(curr))
                else: nums.append(float(curr))
                curr=''
    return nums


def get_target_statement(words):
    req = ''
    for sentence in words:
        if 'X' in sentence or 'x' in sentence or 'Ã—' in sentence:
            nums = get_nums(sentence)
            if len(nums)>=2:
                req = sentence
    if len(req)>2:
        return(req)
    return None

my_path = "/content/drive/MyDrive/OCR-SKU/Amul_Butter_targetted/"
times = []
for f in sorted(os.listdir(my_path)):
    # Read the image file.
    image_path = my_path+f

    t1 = datetime.now()
    result = ocr.ocr(image_path)
    words = []
    for line in result:
        for word_info in line:
            words.append(word_info[1][0])

    req = get_target_statement(words)
    if req:
        x = req.count('X')
        nums = get_nums(req)
        print(make_statement(nums,x))
    else: print(f)
    t2 = datetime.now()
    times.append(t2-t1)

import numpy as np
print('Average time:', np.mean(np.array(times)))

times



result = ocr.ocr('/content/IMG-20230708-WA0040.jpg')
words = []
for line in result:
    for word_info in line:
        words.append(word_info[1][0])
print(words)

"""# Mobile Paddle"""

!pip install paddleocr_mobile

from paddleocr_mobile import PaddleOCRMobile
ocr_mobile = PaddleOCRMobile()

